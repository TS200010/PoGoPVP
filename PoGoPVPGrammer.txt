[PoGoPVPGrammer] [PoGoPVPTrainer]<PoGoPVPTrainer> 		::= 	<PoGoPVPTrainerItemListOpt> :					END-OF-RULE<PoGoPVPTrainerItemListOpt>	::=	*ENTRY entryId {SemEncEntryStart} <EncyclopediaEntry> *END-OF-ENTRY {SemEntryEnd} <PoGoPVPTrainerItemListOpt> :         *COURSE courseId {SemCourseEntryStart} <CourseEntry> *END-OF-COURSE {SemCourseEntryEnd} <PoGoPVPTrainerItemListOpt> :	         END-OF-ENTRIES :				END-OF-RULE							<EncyclopediaEntry> 		::= 	*FOR-COURSE courseId *DATA ( <KnowledgeItem> ) *TEST ( <TestItem> ) <HintItem> :				END-OF-RULE<KnowledgeItem>			::= 	*TypeImageColor ( typeId, *Image: “imageFn”, *Color: colorId ) {SemTypeImageColor} :   		*TypeEffectAttack ( *Attack: attackId , *Defense: defenseId ,         *Effectiveness: effectivenessId) {SemTypeEffectAttack} :         *TypeEffectDefense ( *Attack: attackId, *Defense: defenseId ,          *Effectiveness: effectivenessId ) {SemTypeEffectDefense} :				END-OF-RULE         <TestItem>			::=	*TextQuestion: “questStr” , *AnswerType: <AnswerType> , *Answer: “ansStr” {SemTestText} :         *ImageQUestion: “questStr” , *Image: “imageFn” , *AnswerType: <AnswerType> ,          *Answer: “ansStr” {SemTestImage} :*AnimationQuestion: “questStr” , *Support: “supportStr”,          *AnswerType: <AnswerType>,  *Answer: “ansStr” {SemTestAnimation} :         *VideoQuestion: “questStr”, *Video: “videoFn”, *AnswerType: <AnswerType> ,          *Answer: “ansStr” {SemTestVideo} :         # The Support above is an image, animation, video or URL in XCAssets				END-OF-RULE         <HintItem>			::=	*HINT ( <Hint> ) :				END-OF-RULE<Hint>				::=	*Text: “hintStr” {SemHintText} :					*Image: “hintStr” {SemHintImage} :					*Animation: “hintStr”, “hintStr” {SemHintAnimation} :					*Video: “hintStr”  {SemHintVideo} :					*Web-Address: “URLStr” {SemHintWebAddress} : 				END-OF-RULE<AnswerType>			::=	*YESNO {SemAnswerYesNo} :         *MULTICHOICE-FIXED	( [string] , [string], [string], [string],          [string], [string] ) {} :           # Show possible answers randomly out of those suppled here         *MULTICHOICE-RELATED {} :           # Show four possible answers randomly out of six of the most           #  recent questions of the same type				END-OF-RULE         <CourseEntry>			::= 	*NAME “cseNameStr” {} :					*DESCRIPTION “cseDescStr” {} :					*BACKGROUND “bkgdFn” {} :					*BADGE “badgeFn” {} :				END-OF-RULEEND-OF-GRAMMER# The grammer is defined using <>, {}, ::=, :, END-OF-RULE, and END-OF-GRAMMER# Terminal Symbols:#   Keywords start with a capital letter#   Identifiers start with a lower case letter#   String literals are in “”#   Numeric literals are numbers# All puctuation (including round brackets) are considered whitespace# <NonTerminalSymbols>	 are all rules# “string”			::= 	# any non-quote characters# [number]			::=	# any integer (Regex) ???